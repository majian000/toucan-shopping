<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toucan.shopping.modules.admin.auth.mapper.RoleFunctionMapper">

    <resultMap id="roleFunctionMap" type="com.toucan.shopping.modules.admin.auth.entity.RoleFunction" >
        <id column="id" jdbcType="BIGINT"  property="id" />
        <result column="function_id" jdbcType="VARCHAR" property="functionId" />
        <result column="role_id" jdbcType="VARCHAR" property="roleId" />
        <result column="app_code" jdbcType="VARCHAR" property="appCode" />
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
        <result column="delete_status" jdbcType="INTEGER" property="deleteStatus" />
        <result column="create_admin_id" jdbcType="VARCHAR" property="createAdminId" />
        
    </resultMap>


    <select id="findListByEntity" resultMap="roleFunctionMap" parameterType="com.toucan.shopping.modules.admin.auth.entity.RoleFunction">
        select * from t_sa_role_function t
        <where>
            1=1
            <if test="id!=null">
                and t.id = #{id}
            </if>
            <if test="functionId!=null">
                and t.function_id = #{functionId}
            </if>
            <if test="roleId!=null">
                and t.role_id = #{roleId}
            </if>
            and t.delete_status =0
        </where>

    </select>



    <select id="findListByFunctionId" resultMap="roleFunctionMap" parameterType="java.lang.String">
        select * from t_sa_role_function t where 1=1 and t.function_id = #{functionId} and t.delete_status =0
    </select>


    <insert id="insert" parameterType="com.toucan.shopping.modules.admin.auth.entity.RoleFunction" useGeneratedKeys="true" keyProperty="id" >
        insert into t_sa_role_function(function_id,role_id,app_code,create_date,delete_status,create_admin_id)
        values(#{functionId},#{roleId},#{appCode},#{createDate},#{deleteStatus},#{createAdminId})
    </insert>



    <insert id="inserts"  useGeneratedKeys="true" keyProperty="id" >
        insert into t_sa_role_function(function_id,role_id,app_code,create_date,delete_status,create_admin_id)
         values
        <foreach collection="entitys" item="entity" separator=",">
            (#{entity.functionId},#{entity.roleId},#{entity.appCode},#{entity.createDate},#{entity.deleteStatus},#{entity.createAdminId})
        </foreach>

    </insert>

    <update id="deleteByRoleId" parameterType="java.lang.String">
        update t_sa_role_function set delete_status=1  where role_id = #{roleId} and delete_status=0
    </update>



    <select id="findListByAdminIdAndFunctionUrlAndAppCodeAndRoleIds" resultMap="roleFunctionMap">
            select * from (
                select tsrf.*,tsf.name,tsf.url from t_sa_role_function tsrf
                left join t_sa_function tsf on tsf.function_id =tsrf.function_id and tsf.delete_status = 0  and tsf.enable_status = 1
            )ds
            where 1=1 and ds.url=#{url} and ds.app_code=#{appCode}
            and ds.delete_status=0
            and ds.url is not null
            and ds.role_id in
            <foreach item="item" index="index" collection="roleIdArray" open="("  close=")" separator=",">
                #{item}
            </foreach>

    </select>



    <select id="findCountByAdminIdAndFunctionUrlAndAppCodeAndRoleIds" resultType="java.lang.Long">
        select count(*) from (
        select tsrf.*,tsf.name,tsf.url from t_sa_role_function tsrf
        left join t_sa_function tsf on tsf.function_id =tsrf.function_id and tsf.delete_status = 0  and tsf.enable_status = 1
        )ds
        where 1=1 and ds.url=#{url} and ds.app_code=#{appCode}
        and ds.delete_status=0
        and ds.url is not null
        and ds.role_id in
        <foreach item="item" index="index" collection="roleIdArray" open="("  close=")" separator=",">
            #{item}
        </foreach>

    </select>


    <update id="deleteByFunctionId" parameterType="java.lang.String">
        update t_sa_role_function set delete_status=1  where function_id = #{functionId}
    </update>


    <update id="deleteByFunctionIdArray" >
        update t_sa_role_function set delete_status=1
         where 1=1
         and function_id in
        <foreach item="item" index="index" collection="functionIdArray" open="("  close=")" separator=",">
            #{item}
        </foreach>
    </update>

</mapper>