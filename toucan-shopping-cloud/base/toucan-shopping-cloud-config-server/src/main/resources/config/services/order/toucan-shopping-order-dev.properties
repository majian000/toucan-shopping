#========================订单服务 开发环境====================================

# mybatis
mybatis.type-aliases-package=com.toucan.shopping.*.entity
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=3000
mybatis.mapperLocations=classpath*:com/toucan/**/mapper/*Mapper.xml
#sql打印控制台
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl





spring.shardingsphere.datasource.names=ds2021,ds2022,ds2023


spring.shardingsphere.datasource.ds2021.url=jdbc:mysql://rm-2ze33642t0ju9a897oo.mysql.rds.aliyuncs.com:3306/toucan_shopping_order_2021?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds2021.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds2021.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds2021.username=toucan_shopping_majian000
spring.shardingsphere.datasource.ds2021.password=mj_toucan_shopping_7612
spring.shardingsphere.datasource.ds2021.initial-size=20
spring.shardingsphere.datasource.ds2021.min-idle=20
spring.shardingsphere.datasource.ds2021.maxActive=30
spring.shardingsphere.datasource.ds2021.maxWait=60000
spring.shardingsphere.datasource.ds2021.timeBetweenEvictionRunsMillis=60000
spring.shardingsphere.datasource.ds2021.minEvictableIdleTimeMillis=300000
spring.shardingsphere.datasource.ds2021.validationQuery=SELECT 1
spring.shardingsphere.datasource.ds2021.testWhileIdle=true
spring.shardingsphere.datasource.ds2021.testOnBorrow=false
spring.shardingsphere.datasource.ds2021.testOnReturn=false
spring.shardingsphere.datasource.ds2021.poolPreparedStatements=true
spring.shardingsphere.datasource.ds2021.maxPoolPreparedStatementPerConnectionSize=20


spring.shardingsphere.datasource.ds2022.url=jdbc:mysql://rm-2ze33642t0ju9a897oo.mysql.rds.aliyuncs.com:3306/toucan_shopping_order_2022?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds2022.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds2022.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds2022.username=toucan_shopping_majian000
spring.shardingsphere.datasource.ds2022.password=mj_toucan_shopping_7612
spring.shardingsphere.datasource.ds2022.initial-size=20
spring.shardingsphere.datasource.ds2022.min-idle=20
spring.shardingsphere.datasource.ds2022.maxActive=30
spring.shardingsphere.datasource.ds2022.maxWait=60000
spring.shardingsphere.datasource.ds2022.timeBetweenEvictionRunsMillis=60000
spring.shardingsphere.datasource.ds2022.minEvictableIdleTimeMillis=300000
spring.shardingsphere.datasource.ds2022.validationQuery=SELECT 1
spring.shardingsphere.datasource.ds2022.testWhileIdle=true
spring.shardingsphere.datasource.ds2022.testOnBorrow=false
spring.shardingsphere.datasource.ds2022.testOnReturn=false
spring.shardingsphere.datasource.ds2022.poolPreparedStatements=true
spring.shardingsphere.datasource.ds2022.maxPoolPreparedStatementPerConnectionSize=20


spring.shardingsphere.datasource.ds2023.url=jdbc:mysql://rm-2ze33642t0ju9a897oo.mysql.rds.aliyuncs.com:3306/toucan_shopping_order_2023?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds2023.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds2023.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds2023.username=toucan_shopping_majian000
spring.shardingsphere.datasource.ds2023.password=mj_toucan_shopping_7612
spring.shardingsphere.datasource.ds2023.initial-size=20
spring.shardingsphere.datasource.ds2023.min-idle=20
spring.shardingsphere.datasource.ds2023.maxActive=30
spring.shardingsphere.datasource.ds2023.maxWait=60000
spring.shardingsphere.datasource.ds2023.timeBetweenEvictionRunsMillis=60000
spring.shardingsphere.datasource.ds2023.minEvictableIdleTimeMillis=300000
spring.shardingsphere.datasource.ds2023.validationQuery=SELECT 1
spring.shardingsphere.datasource.ds2023.testWhileIdle=true
spring.shardingsphere.datasource.ds2023.testOnBorrow=false
spring.shardingsphere.datasource.ds2023.testOnReturn=false
spring.shardingsphere.datasource.ds2023.poolPreparedStatements=true
spring.shardingsphere.datasource.ds2023.maxPoolPreparedStatementPerConnectionSize=20





spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{2021..2023}.t_order_$->{2021..2023}_$->{1..12}
# 自定义 分片算法
# 分库分片健database-strategy 数据库策略
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.sharding-column=create_date
# 自定义 分片 策略
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.precise-algorithm-class-name=com.toucan.shopping.cloud.order.shardingsphere.select.database.OrderDBAlgorithm
#                  table-strategy   表 的 策略
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.sharding-column=create_date
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.precise-algorithm-class-name=com.toucan.shopping.cloud.order.shardingsphere.select.table.OrderTableAlgorithm








#logback
logging.level.com.toucan=debug





#kafka
spring.kafka.producer.bootstrap-servers=127.0.0.1:9092
spring.kafka.producer.retries=1
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.properties.max.requst.size=2097152
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.consumer.bootstrap-servers=127.0.0.1:9092
spring.kafka.consumer.group-id=order_consumer_1
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

