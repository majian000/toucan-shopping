#========================定时任务调度 开发环境====================================

#logback
logging.level.com.toucan=debug




# shardingsphere

spring.shardingsphere.datasource.names=master,slave0
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.common.type=com.alibaba.druid.pool.DruidDataSource

# 主库(写)
spring.shardingsphere.datasource.master.url=jdbc:mysql://rm-2ze33642t0ju9a897oo.mysql.rds.aliyuncs.com:3306/toucan_shopping_scheduler?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.master.username=toucan_shopping_majian000
spring.shardingsphere.datasource.master.password=mj_toucan_shopping_7612

#从库(读)
spring.shardingsphere.datasource.slave0.url=jdbc:mysql://rm-2ze33642t0ju9a897oo.mysql.rds.aliyuncs.com:3306/toucan_shopping_scheduler?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.slave0.username=toucan_shopping_majian000
spring.shardingsphere.datasource.slave0.password=mj_toucan_shopping_7612

# 负载均衡算法
spring.shardingsphere.rules.replica-query.load-balancers.round-robin.type=ROUND_ROBIN
# 不配置此项会报错
spring.shardingsphere.rules.replica-query.load-balancers.round-robin.props.default=0
# 主库
spring.shardingsphere.rules.replica-query.data-sources.prds.primary-data-source-name=master

# 从库
spring.shardingsphere.rules.replica-query.data-sources.prds.replica-data-source-names=slave0
spring.shardingsphere.rules.replica-query.data-sources.prds.load-balancer-name=round_robin





#kafka
spring.kafka.producer.bootstrap-servers=123.56.127.178:9092
spring.kafka.producer.retries=1
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.properties.max.requst.size=2097152
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


spring.kafka.consumer.bootstrap-servers=123.56.127.178:9092
spring.kafka.consumer.group-id=sku_group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer






#elasticsearch
spring.data.elasticsearch.cluster-name=elasticsearch
spring.data.elasticsearch.cluster-nodes=123.56.127.178:9200
spring.data.elasticsearch.connectTimeout=5000
spring.data.elasticsearch.socketTimeout=5000
spring.data.elasticsearch.connectionRequestTimeout=5000
spring.data.elasticsearch.maxConnectNum=100
spring.data.elasticsearch.maxConnectPerRoute=100
spring.data.elasticsearch.UserName=elastic
spring.data.elasticsearch.Password=toucp_5432

